# Grafana FLEX Server Configuration
# =================================
# This file should be placed at /etc/default/grafana_flexserver
# Lines starting with # are comments and will be ignored.

# HackRF Server Configuration
# ---------------------------
# URL of the HackRF HTTP server
HACKRF_SERVER_URL=http://localhost:16180

# Authentication for HackRF server
HACKRF_USERNAME=admin
HACKRF_PASSWORD=passw0rd

# Flask Server Configuration
# --------------------------
# IP address to bind the webhook service
# Use 0.0.0.0 for all interfaces, 127.0.0.1 for localhost only
BIND_HOST=0.0.0.0

# Port for the webhook service
BIND_PORT=8080

# HTTPS/SSL Configuration
# -----------------------
# Path to SSL certificate file (leave empty to disable HTTPS)
SSL_CERT_PATH=/etc/ssl/certs/grafana-flexserver.crt

# Path to SSL private key file (leave empty to disable HTTPS)
SSL_KEY_PATH=/etc/ssl/private/grafana-flexserver.key

# HackRF Default Values
# ---------------------
# Default capcode when not specified in alert labels
DEFAULT_CAPCODE=37137

# Default frequency when not specified in alert labels (Hz)
DEFAULT_FREQUENCY=931937500

# Network Configuration
# ---------------------
# Request timeout for HackRF server communication (seconds)
REQUEST_TIMEOUT=30

# Logging Configuration
# --------------------
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Configuration Notes:
# ===================
#
# HTTPS Setup:
# - Generate SSL certificate and key files
# - Set SSL_CERT_PATH and SSL_KEY_PATH to enable HTTPS
# - Leave both empty to run HTTP only
#
# Alert Label Mapping:
# - capcode: Use 'capcode', 'pager_capcode', or 'flex_capcode' in alert labels
# - frequency: Use 'frequency', 'pager_frequency', or 'flex_frequency' in alert labels
#
# Message Priority:
# - summary (highest priority)
# - description
# - message (lowest priority)
#
# Example Grafana Alert Labels:
# {
#   "alertname": "High CPU Usage",
#   "capcode": "123456",
#   "frequency": "931937500"
# }
#
# Security Recommendations:
# - Use strong passwords for HACKRF_PASSWORD
# - Enable HTTPS in production environments
# - Restrict BIND_HOST to specific interfaces if needed
# - Use firewall rules to limit access to the webhook port
# - Regularly rotate SSL certificates
#
# Example SSL Certificate Generation (self-signed for testing):
# sudo openssl req -x509 -newkey rsa:4096 -keyout /etc/ssl/private/grafana-flexserver.key \
#   -out /etc/ssl/certs/grafana-flexserver.crt -days 365 -nodes \
#   -subj "/C=US/ST=State/L=City/O=Organization/CN=grafana-flexserver"
#
# Set proper permissions:
# sudo chmod 600 /etc/ssl/private/grafana-flexserver.key
# sudo chmod 644 /etc/ssl/certs/grafana-flexserver.crt
# sudo chown grafana-flex:grafana-flex /etc/ssl/private/grafana-flexserver.key
# sudo chown grafana-flex:grafana-flex /etc/ssl/certs/grafana-flexserver.crt
